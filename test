# commands to compile and deploy your contract on xiond

cargo check
cargo run --bin schema

sudo docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/optimizer:0.16.0

RES=$(xiond tx wasm store ./artifacts/ajo_contract.wasm \
      --chain-id xion-testnet-2 \
      --gas-adjustment 1.3 \
      --gas-prices 0.001uxion \
      --gas auto \
      -y --output json \
      --node https://rpc.xion-testnet-2.burnt.com:443 \
      --from $WALLET)


echo $RES

CODE_ID=$(xiond query tx $TXHASH \
  --node https://rpc.xion-testnet-2.burnt.com:443 \
  --output json | jq -r '.events[-1].attributes[1].value')

echo $CODE_ID

MSG=$(cat ../create_plan.json)

 xiond tx wasm instantiate $CODE_ID "$MSG" \
  --from $WALLET \
  --label "ajo-contract" \
  --gas-prices 0.025uxion \
  --gas auto \
  --gas-adjustment 1.3 \
  -y --no-admin \
  --chain-id xion-testnet-2 \
  --node https://rpc.xion-testnet-2.burnt.com:443

CONTRACT=$(xiond query tx $TXHASH \
  --node https://rpc.xion-testnet-2.burnt.com:443 \
  --output json | jq -r '.events[] | select(.type == "instantiate") | .attributes[] | select(.key == "_contract_address") | .value')

echo $CONTRACT

xiond tx wasm execute $CONTRACT "$MSG" \
  --from $WALLET \
  --gas-prices 0.025uxion \
  --gas auto \
  --gas-adjustment 1.3 \
  -y \
  --node https://rpc.xion-testnet-2.burnt.com:443 \
  --chain-id xion-testnet-2

xiond query wasm contract-state smart $CONTRACT '{"GetPlansByCreator": {"creator": "xion1uh0txz47k8hztlln4809fpz94pyrxyc9yyrcxg"}}' --output json --node https://rpc.xion-testnet-2.burnt.com:443
xiond query wasm contract-state smart $CONTRACT '{"GetPlan": {"plan_id": 1}}' --output json --node https://rpc.xion-testnet-2.burnt.com:443
